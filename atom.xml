<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://casperit.github.io</id>
    <title>我的互联网杂记</title>
    <updated>2020-12-15T11:09:22.201Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://casperit.github.io"/>
    <link rel="self" href="https://casperit.github.io/atom.xml"/>
    <logo>https://casperit.github.io/images/avatar.png</logo>
    <icon>https://casperit.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 我的互联网杂记</rights>
    <entry>
        <title type="html"><![CDATA[Hmaster 启动过程]]></title>
        <id>https://casperit.github.io/post/hmaster-qi-dong-guo-cheng/</id>
        <link href="https://casperit.github.io/post/hmaster-qi-dong-guo-cheng/">
        </link>
        <updated>2020-12-15T10:52:50.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1-调用链">1.  调用链</h2>
<pre><code>HMasterCommandLine
  |
  |
   - run               local
      |                -----
       - startMaster -|     |
                      |     |- new MiniZooKeeperCluster.startup //embedded zookeeper cluster
                      |     |   |- createDir //创建 zk 数据目录
                      |     |   |- zks = new ZooKeeperServer
                      |     |   |- new NIOServerCnxn.Factory(clientPort).startup //启动服务
                      |     |   |        |
                      |     |   |        |- zks.startdata
                      |     |   |        |    |
                      |     |   |        |    |- new ZKDatabase
                      |     |   |        |    |- loadData // Restore sessions and data
                      |     |   |        |
                      |     |   |         - zks.startup
                      |     |   |             |
                      |     |   |             |- startSessionTracker
                      |     |   |             |- setupRequestProcessors
                      |     |   |                   |
                      |     |   |                   |- new FinalRequestProcessor
                      |     |   |                   |- new SyncRequestProcessor.start
                      |     |   |                   |- new PrepRequestProcessor.start
                      |     |   |             |- registerJMX //注册JMX mbean
                      |     |   |
                      |     |    - waitForServerUp // echo &quot;stat&quot; to assert zk liveless
                      |     |
                      |     |
                      |      - new LocalHBaseCluster().startup //启动包括 Hmaster + RS 的服务
                      |         |
                      |         |- masterClass = org.apache.hadoop.hbase.master.HMasterCommandLine$LocalHMaster
                      |         |-addMaster()
                      |         |    |- createMasterThread()
                      |         |    |   |- HMaster.init()
                      |         |    |   |    |- HregionServer.init()
                      |         |    |   |    |   |- UserProvider.instantiate(conf)  // 初始化 userprovider
                      |         |    |   |    |   |- FSUtils.setupShortCircuitRead(this.conf) // short circuit read setup
                      |         |    |   |    |   |-  createRpcServices() 
                      |         |    |   |    |   |   | -  MasterRpcServices.init() -&gt;RSRpcServices.init()
                      |         |    |   |    |   |   |   | - rpcServer = new RpcServer()
                      |         |    |   |    |   |   |   |   | - rpcSchedulerFactory.create() 
                      |         |    |   |    |   |   |   |   |   | - callExecutor //初始化读写executor
                      |         |    |   |    |   |   |   |   |   | - priorityExecutor //初始化priorityExecutor
                      |         |    |   |    |   |   |   |   |   | - replicationExecutor //初始化replicationExecutor
                      |         |    |   |    |   |-  new ZooKeeperWatcher() //初始化zk连接和watcher，并create相关的znode
                      |         |    |   |    |   |-  TableLockManager.createTableLockManager
                      |         |    |   |    |   |-  new MasterAddressTracker.start() // /hbase/master znode watcher to track master address
                      |         |    |   |    |   |   | - createBaseZNodes()
                      |         |    |   |    |   |   |   |   | - RpcServer.init() 
                      |         |    |   |    |   |   |   |   |   | -  
                      |         |    |- rpcServer = HBaseRPC.getServer
                      |         |    |- rpcServer.startThreads
                      |         |    |     |
                      |         |    |     |- responder.start()
                      |         |    |     |- listener.start()
                      |         |    |      - handlers = new Handler[handlerCount].startall()
                      |         |    |
                      |         |     - new ZooKeeperWatcher
                      |         |
                      |         |- HRegionServer.newInstance
                      |         |    |
                      |         |    |- server = HBaseRPC.getServer
                      |         |     - run
                      |         |        |
                      |         |         - server.startThreads
                      |         |
                      |          - start master and rs threads
                      |
                      |
                       ------------ HMaster.constructMaster(HMaster.class, conf）-&gt;start();
                       distributed
                      |     |
                      |     |- new MiniZooKeeperCluster.startup
                      |     |   |
                      |     |   |- zks = new ZooKeeperServer
                      |     |   |- new NIOServerCnxn.Factory(clientPort).startup
                      |     |   |        |
                      |     |   |        |- zks.startdata
                      |     |   |        |    |
                      |     |   |        |    |- new ZKDatabase
                      |     |   |        |
                      |     |   |         - zks.startup
                      |     |   |             |
                      |     |   |             |- startSessionTracker
                      |     |   |              - setupRequestProcessors
                      |     |   |                   |
                      |     |   |                   | PrepRequestProcessor -&gt; SyncRequestProcessor -&gt; FinalRequestProcessor
                      |     |   |                   |
                      |     |   |                   |- new FinalRequestProcessor
                      |     |   |                   |- new SyncRequestProcessor
                      |     |   |                    - new PrepRequestProcessor
                      |     |   |
                      |     |    - socket connect clientPort 'stat' to assert zk alive
                      |     |
                      |     |
                      |      - new LocalHBaseCluster().startup
                      |         |
                      |         |- HMaster.newInstance
                      |         |    |
                      |         |    |- rpcServer = HBaseRPC.getServer
                      |         |    |- rpcServer.startThreads
                      |         |    |     |
                      |         |    |     |- responder.start()
                      |         |    |     |- listener.start()
                      |         |    |      - handlers = new Handler[handlerCount].startall()
                      |         |    |
                      |         |     - new ZooKeeperWatcher
                      |         |
                      |         |- HRegionServer.newInstance
                      |         |    |
                      |         |    |- server = HBaseRPC.getServer
                      |         |     - run
                      |         |        |
                      |         |         - server.startThreads
                      |         |
                      |          - start master and rs threads
                      |
                      |
                       ------------ HMaster.constructMaster(HMaster.class, conf）-&gt;start();
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://casperit.github.io/post/hello-gridea/</id>
        <link href="https://casperit.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>